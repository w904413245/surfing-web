'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.default = function ({ errorPath, defaultErrorMessage, showRealErrorMessage }) {

    return (() => {
        var _ref = (0, _asyncToGenerator3.default)(function* (ctx, next) {
            if (ctx.req.lavasIgnoreFlag) {
                return yield next();
            }
            try {
                yield next();
            } catch (err) {
                console.log('[Lavas] error middleware catch error:');
                console.log(err);

                if (ctx.headerSent || !ctx.writable) {
                    err.headerSent = true;
                    return;
                }

                if (errorPath === ctx.path.replace(/\?.+$/, '')) {
                    // if already in error procedure, then end this request immediately, avoid infinite loop
                    ctx.res.end();
                    return;
                }

                // clear headers
                ctx.res._headers = {};

                // redirect to the corresponding url
                ctx.redirect(`${errorPath}?error=${encodeURIComponent(showRealErrorMessage ? err.message : defaultErrorMessage)}`);

                ctx.res.end();
            }
        });

        return function (_x, _x2) {
            return _ref.apply(this, arguments);
        };
    })();
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default']; /**
                                      * @file koaError.js, error handler middleware for koa
                                      * @author lavas
                                      */
/* istanbul ignore file */

/**
 * generate error middleware
 *
 * @param {string} errPath errPath
 * @return {Function} koa middleware
 */